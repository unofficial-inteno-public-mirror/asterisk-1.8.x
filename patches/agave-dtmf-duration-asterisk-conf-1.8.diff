Index: include/asterisk/options.h
===================================================================
--- include/asterisk/options.h	(.../branches/1.8)	(revision 403285)
+++ include/asterisk/options.h	(.../team/oej/agave-dtmf-duration-asterisk-conf-1.8)	(revision 403285)
@@ -153,6 +153,7 @@
 extern int option_maxfiles;		/*!< Max number of open file handles (files, sockets) */
 extern int option_debug;		/*!< Debugging */
 extern int option_maxcalls;		/*!< Maximum number of simultaneous channels */
+extern unsigned int option_dtmfminduration;	/*!< Minimum duration of DTMF (channel.c) in ms */
 extern double option_maxload;
 #if defined(HAVE_SYSINFO)
 extern long option_minmemfree;		/*!< Minimum amount of free system memory - stop accepting calls if free memory falls below this watermark */
Index: main/channel.c
===================================================================
--- main/channel.c	(.../branches/1.8)	(revision 403285)
+++ main/channel.c	(.../team/oej/agave-dtmf-duration-asterisk-conf-1.8)	(revision 403285)
@@ -110,9 +110,6 @@
  *  100ms */
 #define AST_DEFAULT_EMULATE_DTMF_DURATION 100
 
-/*! Minimum allowed digit length - 80ms */
-#define AST_MIN_DTMF_DURATION 80
-
 /*! Minimum amount of time between the end of the last digit and the beginning 
  *  of a new one - 45ms */
 #define AST_MIN_DTMF_GAP 45
@@ -4083,10 +4080,10 @@
 					chan->emulate_dtmf_digit = f->subclass.integer;
 					chan->dtmf_tv = ast_tvnow();
 					if (f->len) {
-						if (f->len > AST_MIN_DTMF_DURATION)
+						if (f->len > option_dtmfminduration)
 							chan->emulate_dtmf_duration = f->len;
 						else 
-							chan->emulate_dtmf_duration = AST_MIN_DTMF_DURATION;
+							chan->emulate_dtmf_duration = option_dtmfminduration;
 					} else
 						chan->emulate_dtmf_duration = AST_DEFAULT_EMULATE_DTMF_DURATION;
 					ast_log(LOG_DTMF, "DTMF begin emulation of '%c' with duration %u queued on %s\n", f->subclass.integer, chan->emulate_dtmf_duration, chan->name);
@@ -4116,25 +4113,25 @@
 					 * dtmf emulation to be triggered later
 					 * on.
 					 */
-					if (ast_tvdiff_ms(now, chan->dtmf_tv) < AST_MIN_DTMF_DURATION) {
+					if (ast_tvdiff_ms(now, chan->dtmf_tv) < option_dtmfminduration) {
 						f->len = ast_tvdiff_ms(now, chan->dtmf_tv);
 						ast_log(LOG_DTMF, "DTMF end '%c' detected to have actual duration %ld on the wire, emulation will be triggered on %s\n", f->subclass.integer, f->len, chan->name);
 					}
 				} else if (!f->len) {
 					ast_log(LOG_DTMF, "DTMF end accepted without begin '%c' on %s\n", f->subclass.integer, chan->name);
-					f->len = AST_MIN_DTMF_DURATION;
+					f->len = option_dtmfminduration;
 				}
-				if (f->len < AST_MIN_DTMF_DURATION && !ast_test_flag(chan, AST_FLAG_END_DTMF_ONLY)) {
-					ast_log(LOG_DTMF, "DTMF end '%c' has duration %ld but want minimum %d, emulating on %s\n", f->subclass.integer, f->len, AST_MIN_DTMF_DURATION, chan->name);
+				if (f->len < option_dtmfminduration && !ast_test_flag(chan, AST_FLAG_END_DTMF_ONLY)) {
+					ast_log(LOG_DTMF, "DTMF end '%c' has duration %ld but want minimum %d, emulating on %s\n", f->subclass.integer, f->len, option_dtmfminduration, chan->name);
 					ast_set_flag(chan, AST_FLAG_EMULATE_DTMF);
 					chan->emulate_dtmf_digit = f->subclass.integer;
-					chan->emulate_dtmf_duration = AST_MIN_DTMF_DURATION - f->len;
+					chan->emulate_dtmf_duration = option_dtmfminduration - f->len;
 					ast_frfree(f);
 					f = &ast_null_frame;
 				} else {
 					ast_log(LOG_DTMF, "DTMF end passthrough '%c' on %s\n", f->subclass.integer, chan->name);
-					if (f->len < AST_MIN_DTMF_DURATION) {
-						f->len = AST_MIN_DTMF_DURATION;
+					if (f->len < option_dtmfminduration) {
+						f->len = option_dtmfminduration;
 					}
 					chan->dtmf_tv = now;
 				}
Index: main/asterisk.c
===================================================================
--- main/asterisk.c	(.../branches/1.8)	(revision 403285)
+++ main/asterisk.c	(.../team/oej/agave-dtmf-duration-asterisk-conf-1.8)	(revision 403285)
@@ -158,6 +158,10 @@
 #define AST_MAX_CONNECTS 128
 #define NUM_MSGS 64
 
+/*! Minimum allowed DTMF digit length - 80ms */
+#define AST_MIN_DTMF_DURATION 80
+
+
 /*! \brief Welcome message when starting a CLI interface */
 #define WELCOME_MESSAGE \
     ast_verbose("Asterisk %s, Copyright (C) 1999 - 2013 Digium, Inc. and others.\n" \
@@ -183,6 +187,7 @@
 double option_maxload;				/*!< Max load avg on system */
 int option_maxcalls;				/*!< Max number of active calls */
 int option_maxfiles;				/*!< Max number of open file handles (files, sockets) */
+unsigned int option_dtmfminduration;			/*!< Minimum duration of DTMF. */
 #if defined(HAVE_SYSINFO)
 long option_minmemfree;				/*!< Minimum amount of free system memory - stop accepting calls if free memory falls below this watermark */
 #endif
@@ -487,6 +492,7 @@
 	ast_cli(a->fd, "  Internal timing:             %s\n", ast_test_flag(&ast_options, AST_OPT_FLAG_INTERNAL_TIMING) ? "Enabled" : "Disabled");
 	ast_cli(a->fd, "  Transmit silence during rec: %s\n", ast_test_flag(&ast_options, AST_OPT_FLAG_TRANSMIT_SILENCE) ? "Enabled" : "Disabled");
 	ast_cli(a->fd, "  Generic PLC:                 %s\n", ast_test_flag(&ast_options, AST_OPT_FLAG_GENERIC_PLC) ? "Enabled" : "Disabled");
+	ast_cli(a->fd, "  Min DTMF duration::          %u\n", option_dtmfminduration);
 
 	ast_cli(a->fd, "\n* Subsystems\n");
 	ast_cli(a->fd, "  -------------\n");
@@ -3037,6 +3043,9 @@
 		unsigned int keydir:1;
 	} found = { 0, 0 };
 
+	/* Set default value */
+	option_dtmfminduration = AST_MIN_DTMF_DURATION;
+
 	if (ast_opt_override_config) {
 		cfg = ast_config_load2(ast_config_AST_CONFIG_FILE, "" /* core, can't reload */, config_flags);
 		if (cfg == CONFIG_STATUS_FILEMISSING || cfg == CONFIG_STATUS_FILEUNCHANGED || cfg == CONFIG_STATUS_FILEINVALID) {
@@ -3172,6 +3181,10 @@
 		/* Enable internal timing */
 		} else if (!strcasecmp(v->name, "internal_timing")) {
 			ast_set2_flag(&ast_options, ast_true(v->value), AST_OPT_FLAG_INTERNAL_TIMING);
+		} else if (!strcasecmp(v->name, "mindtmfduration")) {
+			if (sscanf(v->value, "%30u", &option_dtmfminduration) != 1) {
+				option_dtmfminduration = AST_MIN_DTMF_DURATION;
+			}
 		} else if (!strcasecmp(v->name, "maxcalls")) {
 			if ((sscanf(v->value, "%30d", &option_maxcalls) != 1) || (option_maxcalls < 0)) {
 				option_maxcalls = 0;
Index: configs/asterisk.conf.sample
===================================================================
--- configs/asterisk.conf.sample	(.../branches/1.8)	(revision 403285)
+++ configs/asterisk.conf.sample	(.../team/oej/agave-dtmf-duration-asterisk-conf-1.8)	(revision 403285)
@@ -33,6 +33,7 @@
 ;autosystemname = yes		; Automatically set systemname to hostname,
 				; uses 'localhost' on failure, or systemname if
 				; set.
+;mindtmfduration = 80		; Set minimum DTMF duration in ms (default 80 ms)
 ;maxcalls = 10			; Maximum amount of calls allowed.
 ;maxload = 0.9			; Asterisk stops accepting new calls if the
 				; load average exceed this limit.
Index: .
===================================================================
--- .	(.../branches/1.8)	(revision 403285)
+++ .	(.../team/oej/agave-dtmf-duration-asterisk-conf-1.8)	(revision 403285)

Property changes on: .
___________________________________________________________________
Added: automerge-email
## -0,0 +1 ##
+oej@edvina.net
\ No newline at end of property
Added: automerge
## -0,0 +1 ##
+*
\ No newline at end of property
Added: svnmerge-integrated
## -0,0 +1 ##
+/branches/1.8:1-403029
\ No newline at end of property
